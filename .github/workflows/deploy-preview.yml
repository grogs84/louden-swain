name: Deploy Preview

on:
  pull_request:
    branches: [main, test]
    types: [opened, synchronize, reopened]

permissions:
  contents: write

jobs:
  quality-gates:
    runs-on: ubuntu-latest
    name: Quality Gates
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: cd frontend && npm install --legacy-peer-deps

      - name: Run frontend linting
        run: cd frontend && npm run lint

      - name: Run frontend type checking
        run: cd frontend && npm run type-check

      - name: Build frontend
        run: cd frontend && npm run build

  deploy-preview:
    needs: quality-gates
    runs-on: ubuntu-latest
    name: Deploy Preview to Vercel
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }} --cwd frontend
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }} --cwd frontend

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --cwd frontend > deployment-url.txt
        id: deploy

      - name: Extract deployment URL
        run: |
          DEPLOYMENT_URL=$(cat deployment-url.txt | tail -1)
          echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV

      - name: Comment deployment URL on PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Preview deployment ready!\n\n**Preview URL:** ${{ env.DEPLOYMENT_URL }}\n\nThis deployment will automatically update with new commits to this PR.`
            })

      - name: Update PR status check
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: 'success',
              target_url: '${{ env.DEPLOYMENT_URL }}',
              description: 'Preview deployment ready',
              context: 'vercel/preview'
            })